{
    "name": "oauth2-server",
    "title": "oauth2-server",
    "provider_type": "native",
    "grants": [
        "access_code",
        "implicit",
        "application",
        "password",
        "jwt"
    ],
    "gateway_version": "6000",
    "native_provider": {
        "clients": [
            "confidential"
        ],
        "authorize_path": "/oauth2/authorize",
        "token_path": "/oauth2/token",
        "api": {
            "info": {
                "description": ""
            },
            "x-ibm-configuration": {
                "gateway": "datapower-api-gateway",
                "assembly": {
                    "execute": [
                        {
                            "oauth": {
                                "title": "oauth-auto-generated-1",
                                "version": "2.0.0",
                                "description": "This oauth policy performs all OAuth/OpenID Connect protocol steps that are needed for OAuth Validation by default. The inputs and outputs of each of the steps are driven by documented context variables. Add or remove the Supported OAuth Components as required.",
                                "oauth-provider-settings-ref": {
                                    "default": "oauth2-server"
                                },
                                "supported-oauth-components": [
                                    "OAuthValidateRequest"
                                ]
                            }
                        },
                        {
                            "switch": {
                                "version": "2.0.0",
                                "title": "oauth-auto-generated-switch",
                                "case": [
                                    {
                                        "condition": "($operationPath() = '/oauth2/issued')",
                                        "execute": [
                                            {
                                                "user-security": {
                                                    "title": "user-security-auto-generated-issued",
                                                    "version": "2.1.0",
                                                    "description": "This user security policy performs EI(basic) and AU(auth url) check for oauth assembly. Change the security check method as required",
                                                    "factor-id": "default",
                                                    "extract-identity-method": "basic",
                                                    "ei-stop-on-error": false,
                                                    "user-auth-method": "user-registry",
                                                    "au-stop-on-error": false,
                                                    "user-az-method": "authenticated",
                                                    "az-stop-on-error": true,
                                                    "auth-response-headers-pattern": "(?)x-api*",
                                                    "auth-response-header-credential": "X-API-Authenticated-Credential",
                                                    "user-registry": "local-registry"
                                                }
                                            },
                                            {
                                                "oauth": {
                                                    "title": "oauth-auto-generated-5",
                                                    "version": "2.0.0",
                                                    "description": "This oauth policy performs all OAuth protocol steps that are needed for issued path by default. The inputs and outputs of each of the steps are driven by documented context variables. Add or remove the Supported OAuth Components as required.",
                                                    "oauth-provider-settings-ref": {
                                                        "default": "oauth2-server"
                                                    },
                                                    "supported-oauth-components": [
                                                        "OAuthRevokeToken"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "condition": "($operationPath() = '/oauth2/token' and oauth.processing.grant_type = 'urn:ietf:params:oauth:grant-type:jwt-bearer')",
                                        "execute": [
                                            {
                                                "set-variable": {
                                                    "version": "2.0.0",
                                                    "title": "oauth-auto-generated-grant-jwt-set-variable",
                                                    "actions": [
                                                        {
                                                            "set": "oauth.processing.jwt.jwk",
                                                            "value": "$(JWTGrantTypeJWK)",
                                                            "type": "any"
                                                        }
                                                    ]
                                                }
                                            },
                                            {
                                                "jwt-validate": {
                                                    "version": "2.0.0",
                                                    "title": "oauth-auto-generated-grant-jwt-validate",
                                                    "jwt": "oauth.processing.assertion",
                                                    "output-claims": "oauth.processing.jwt.claims",
                                                    "jws-jwk": "oauth.processing.jwt.jwk"
                                                }
                                            },
                                            {
                                                "gatewayscript": {
                                                    "title": "oauth-auto-generated-grant-jwt-gws",
                                                    "version": "2.0.0",
                                                    "source": "let claims = context.get( 'oauth.processing.jwt.claims' );\nlet errorText = undefined;\nif (claims === undefined)\n{\n  errorText = 'No JWT claims found';\n}\nelse\n{\n   let subject = claims.sub;\n  if (subject === undefined)\n  {\n    errorText = 'JWT subject not found';\n  }\n  else\n  {\n    context.set( 'oauth.processing.resource_owner', subject );\n  }\n}\n\nif (errorText !==undefined)\n{\n  console.error('JWT Grant Type Error: ' + errorText);\n  context.message.statusCode = '400 Bad Request';\n  context.reject('JWT Error', 'JWT Error: ' + errorText);\n}"
                                                }
                                            },
                                            {
                                                "oauth": {
                                                    "title": "oauth-auto-generated-grant-jwt-oauth",
                                                    "version": "2.0.0",
                                                    "description": "This oauth policy performs all OAuth/OpenID Connect protocol steps that are needed for token path by default. The inputs and outputs of each of the steps are driven by documented context variables. Add or remove the Supported OAuth Components as required.",
                                                    "oauth-provider-settings-ref": {
                                                        "default": "oauth2-server"
                                                    },
                                                    "supported-oauth-components": [
                                                        "OAuthGenerateAccessToken",
                                                        "OAuthVerifyRefreshToken",
                                                        "OAuthCollectMetadata"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "condition": "($operationPath() = '/oauth2/token')",
                                        "execute": [
                                            {
                                                "user-security": {
                                                    "title": "user-security-auto-generated-password",
                                                    "version": "2.1.0",
                                                    "description": "",
                                                    "factor-id": "default",
                                                    "extract-identity-method": "context-var",
                                                    "ei-stop-on-error": false,
                                                    "user-auth-method": "user-registry",
                                                    "au-stop-on-error": false,
                                                    "user-az-method": "authenticated",
                                                    "az-stop-on-error": true,
                                                    "auth-response-headers-pattern": "(?)x-api*",
                                                    "auth-response-header-credential": "X-API-Authenticated-Credential",
                                                    "pass-context-var": "request.parameters.password.values",
                                                    "user-context-var": "request.parameters.username.values",
                                                    "user-registry": "local-registry"
                                                }
                                            },
                                            {
                                                "oauth": {
                                                    "title": "oauth-auto-generated-3",
                                                    "version": "2.0.0",
                                                    "description": "This oauth policy performs all OAuth/OpenID Connect protocol steps that are needed for token path by default. The inputs and outputs of each of the steps are driven by documented context variables. Add or remove the Supported OAuth Components as required.",
                                                    "oauth-provider-settings-ref": {
                                                        "default": "oauth2-server"
                                                    },
                                                    "supported-oauth-components": [
                                                        "OAuthGenerateAccessToken",
                                                        "OAuthVerifyAZCode",
                                                        "OAuthVerifyRefreshToken",
                                                        "OAuthCollectMetadata"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "condition": "($operationPath() = '/oauth2/authorize')",
                                        "execute": [
                                            {
                                                "user-security": {
                                                    "title": "user-security-auto-generated",
                                                    "version": "2.1.0",
                                                    "description": "This user security policy performs EI(basic) and AU(auth url) check for oauth assembly. Change the security check method as required",
                                                    "factor-id": "default",
                                                    "extract-identity-method": "basic",
                                                    "ei-stop-on-error": true,
                                                    "user-auth-method": "user-registry",
                                                    "au-stop-on-error": true,
                                                    "user-az-method": "authenticated",
                                                    "az-stop-on-error": true,
                                                    "auth-response-headers-pattern": "(?)x-api*",
                                                    "auth-response-header-credential": "X-API-Authenticated-Credential",
                                                    "user-registry": "local-registry"
                                                }
                                            },
                                            {
                                                "oauth": {
                                                    "title": "oauth-auto-generated-2",
                                                    "version": "2.0.0",
                                                    "description": "This oauth policy performs all OAuth/OpenID Connect protocol steps that are needed for az code path by default. The inputs and outputs of each of the steps are driven by documented context variables. Add or remove the Supported OAuth Components as required.",
                                                    "oauth-provider-settings-ref": {
                                                        "default": "oauth2-server"
                                                    },
                                                    "supported-oauth-components": [
                                                        "OAuthGenerateAZCode",
                                                        "OAuthGenerateAccessToken",
                                                        "OAuthVerifyAZCode",
                                                        "OAuthCollectMetadata"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "otherwise": [
                                            {
                                                "oauth": {
                                                    "title": "oauth-auto-generated-4",
                                                    "version": "2.0.0",
                                                    "description": "This oauth policy performs all OAuth/OpenID Connect protocol steps that are needed for all other paths by default. The inputs and outputs of each of the steps are driven by documented context variables. Add or remove the Supported OAuth Components as required.",
                                                    "oauth-provider-settings-ref": {
                                                        "default": "oauth2-server"
                                                    },
                                                    "supported-oauth-components": [
                                                        "OAuthIntrospectToken",
                                                        "OAuthRevokeToken"
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    ]
                },
                "properties": {
                    "JWTGrantTypeJWK": {
                        "value": "{   \"kty\": \"RSA\",   \"d\":         \"IWwDpREZSZ3sF9GrEX1SXb8sLpSFjUL2XtJXmbQNGssBTx_WsoWXVdP8agewUjy0dXjOi4kazbb5foQ4Kn8RPx64pkozpdopx6kwsS9yIh_w0bB-1eJzIxiV1f18XX5g_Sqv_PJ63oNgS0QQCh3mECqp_wlzKbiDH5wSHDAuNLFXCTpCpxTe_Iyd2z1kJNDDSExs5Hj8oFCUSxXmYD9RM7UPgdae-bOayv4s5HCCif3ZrVzm-TjvNbLhcP75bRRzREPk2QjN2e1yPHs2uJBHmSQdiQ58G43fHs8Kqi5HDrF8e77vFB03MCUq37e3WcnrKRR8JxlrKGgf3PhDJp0OUQ\",           \"e\": \"AQAB\",   \"use\": \"sig\",   \"kid\": \"ozairs\",   \"alg\": \"RS256\",   \"n\":         \"hDyppyzLbrV4dDBDze5g-4LH5M9JiFKmFAp8Mt-GkOjhbn3VYU937GRugUTXyM9TrV15LJFA1PA5NRGZO-R8Wv_vQx6hmbbsD2ChouZlSWnSJ3ZFdijRSY_-vddbufAG2ucK0CCD0TyBD5WYe9tnpMOCxv4eGAsUN6BT9OhcEJEWv3cvyHK6DUATjpx4ExaQi1wgAVbfCBK-A5au4ApOLRQjZ-tLCt3rTbqtkRUuES4nf1bS70YU8rsPBK71gQz2KZP4PHRfBGYZTy-8XWCgG3yOJpd7kRz0ratDc-xJC2wlGK4Q8kTPmhMvi6IvSJswQTDu4spSilcbdqEOVKfzeQ\"         }",
                        "description": "oauth-auto-generated-JWTGrantTypeJWK",
                        "encoded": false
                    },
                    "JWSSignPrivateKey": {
                        "value": "{   \"kty\": \"RSA\",   \"d\":         \"IWwDpREZSZ3sF9GrEX1SXb8sLpSFjUL2XtJXmbQNGssBTx_WsoWXVdP8agewUjy0dXjOi4kazbb5foQ4Kn8RPx64pkozpdopx6kwsS9yIh_w0bB-1eJzIxiV1f18XX5g_Sqv_PJ63oNgS0QQCh3mECqp_wlzKbiDH5wSHDAuNLFXCTpCpxTe_Iyd2z1kJNDDSExs5Hj8oFCUSxXmYD9RM7UPgdae-bOayv4s5HCCif3ZrVzm-TjvNbLhcP75bRRzREPk2QjN2e1yPHs2uJBHmSQdiQ58G43fHs8Kqi5HDrF8e77vFB03MCUq37e3WcnrKRR8JxlrKGgf3PhDJp0OUQ\",           \"e\": \"AQAB\",   \"use\": \"sig\",   \"kid\": \"ozairs\",   \"alg\": \"RS256\",   \"n\":         \"hDyppyzLbrV4dDBDze5g-4LH5M9JiFKmFAp8Mt-GkOjhbn3VYU937GRugUTXyM9TrV15LJFA1PA5NRGZO-R8Wv_vQx6hmbbsD2ChouZlSWnSJ3ZFdijRSY_-vddbufAG2ucK0CCD0TyBD5WYe9tnpMOCxv4eGAsUN6BT9OhcEJEWv3cvyHK6DUATjpx4ExaQi1wgAVbfCBK-A5au4ApOLRQjZ-tLCt3rTbqtkRUuES4nf1bS70YU8rsPBK71gQz2KZP4PHRfBGYZTy-8XWCgG3yOJpd7kRz0ratDc-xJC2wlGK4Q8kTPmhMvi6IvSJswQTDu4spSilcbdqEOVKfzeQ\"         }",
                        "description": "x-ibm-oauth-oidc-auto-generated-JWSSignPrivateKey",
                        "encoded": false
                    },
                    "JWSAlgorithm": {
                        "value": "RS256",
                        "description": "x-ibm-oauth-oidc-auto-generated-JWSAlgorithm",
                        "encoded": false
                    },
                    "JWTIssuer": {
                        "value": "IBM APIConnect",
                        "description": "x-ibm-oauth-oidc-auto-generated-JWTIssuer",
                        "encoded": false
                    },
                    "JWSSignKeyKID": {
                        "value": "",
                        "description": "x-ibm-oauth-oidc-auto-generated-JWSSignKeyKID",
                        "encoded": false
                    }
                },
                "type": "oauth",
                "testable": true,
                "enforced": true,
                "phase": "realized",
                "cors": {
                    "enabled": true
                }
            },
            "basePath": "/",
            "swagger": "2.0",
            "host": "$(catalog.host)",
            "schemes": [
                "https"
            ],
            "paths": {
                "/oauth2/authorize": {
                    "get": {
                        "produces": [
                            "text/html"
                        ],
                        "summary": "endpoint for Authorization Code and Implicit grants",
                        "description": "description",
                        "parameters": [
                            {
                                "name": "response_type",
                                "in": "query",
                                "description": "request an authorization code or or access token (implicit)",
                                "required": true,
                                "type": "string",
                                "enum": [
                                    "code",
                                    "token"
                                ]
                            },
                            {
                                "name": "client_id",
                                "in": "query",
                                "description": "client_id of the application which product is subscribed to",
                                "required": false,
                                "type": "string"
                            },
                            {
                                "name": "scope",
                                "in": "query",
                                "description": "Scope being requested",
                                "type": "string",
                                "required": false
                            },
                            {
                                "name": "redirect_uri",
                                "in": "query",
                                "type": "string",
                                "description": "URI where user is redirected to after authorization",
                                "required": false
                            },
                            {
                                "name": "state",
                                "in": "query",
                                "type": "string",
                                "description": "This string will be echoed back to application when user is redirected",
                                "required": false
                            }
                        ],
                        "responses": {
                            "200": {
                                "description": "An HTML form for authentication or authorization of this request."
                            },
                            "302": {
                                "description": "Redirect to the clients redirect_uri containing one of the following\n- **authorization code** for Authorization code grant\n- **access token** for Implicity grant\n- **error** in case of errors, such as the user has denied the request\n"
                            }
                        }
                    },
                    "post": {
                        "consumes": [
                            "application/x-www-form-urlencoded"
                        ],
                        "produces": [
                            "text/html"
                        ],
                        "summary": "submit approval to authorization code or access token",
                        "description": "Submit resource owners approval (or rejection) for the OAuth2 Server to issue an\nauthorization code or access token to the application.\n",
                        "security": [],
                        "parameters": [
                            {
                                "name": "response_type",
                                "in": "formData",
                                "description": "request an authorization code or or access token (implicit)",
                                "required": true,
                                "type": "string",
                                "enum": [
                                    "code",
                                    "token"
                                ]
                            },
                            {
                                "name": "client_id",
                                "in": "formData",
                                "description": "application requesting the access code or token",
                                "required": false,
                                "type": "string"
                            },
                            {
                                "name": "scope",
                                "in": "formData",
                                "description": "requested scope of this authorization",
                                "required": false,
                                "type": "string"
                            },
                            {
                                "name": "redirect_uri",
                                "in": "formData",
                                "description": "URI the application is requesting this code or token to be redirected to",
                                "required": false,
                                "type": "string"
                            }
                        ],
                        "responses": {
                            "200": {
                                "description": "200 OK"
                            }
                        }
                    }
                },
                "/oauth2/token": {
                    "post": {
                        "consumes": [
                            "application/x-www-form-urlencoded"
                        ],
                        "produces": [
                            "application/json"
                        ],
                        "parameters": [
                            {
                                "name": "grant_type",
                                "in": "formData",
                                "required": true,
                                "type": "string",
                                "enum": [
                                    "authorization_code",
                                    "password",
                                    "client_credentials",
                                    "refresh_token"
                                ]
                            }
                        ],
                        "responses": {
                            "200": {
                                "description": "200 OK"
                            }
                        }
                    }
                },
                "/oauth2/introspect": {
                    "post": {
                        "consumes": [
                            "application/x-www-form-urlencoded"
                        ],
                        "produces": [
                            "application/json"
                        ],
                        "summary": "Introspect a given access_token supported",
                        "description": "This endpoint introspects a given access_token\n",
                        "security": [],
                        "parameters": [
                            {
                                "name": "token",
                                "in": "formData",
                                "description": "String value of the access_token to be introspected",
                                "required": true,
                                "type": "string"
                            },
                            {
                                "name": "token_type_hint",
                                "in": "formData",
                                "description": "This must contain 'access_token' to indicate the token type",
                                "required": true,
                                "type": "string"
                            }
                        ],
                        "responses": {
                            "200": {
                                "description": "json document containing access_token information, etc.",
                                "schema": {
                                    "$ref": "#/definitions/introspect_response"
                                }
                            },
                            "401": {
                                "description": "failure"
                            }
                        }
                    }
                },
                "/oauth2/revoke": {
                    "post": {
                        "responses": {
                            "200": {
                                "description": "response from revocation",
                                "schema": {
                                    "$ref": "#/definitions/token_revoke_response"
                                }
                            }
                        },
                        "description": "This endpoint revokes a given access_token or refresh_token\n",
                        "parameters": [
                            {
                                "required": true,
                                "type": "string",
                                "description": "String value of the access_token, or refresh_token to be revoked",
                                "in": "formData",
                                "name": "token"
                            },
                            {
                                "required": true,
                                "type": "string",
                                "description": "This must contain 'access_token' or 'refresh_token' to indicate the token type",
                                "in": "formData",
                                "name": "token_type_hint"
                            }
                        ],
                        "produces": [
                            "application/json"
                        ],
                        "security": [],
                        "consumes": [
                            "application/x-www-form-urlencoded"
                        ],
                        "summary": "Revoke a given access_token or refresh_token"
                    }
                },
                "/oauth2/issued": {
                    "get": {
                        "produces": [
                            "application/json"
                        ],
                        "summary": "Returns list of permission granted to the owner",
                        "description": "This endpoint allows the return of all the issued permission(s) for a given authenticated owner per owner authentication \ndefined in the user security configuration\n",
                        "parameters": [
                            {
                                "name": "username",
                                "in": "query",
                                "description": "username's permission to be queried if the authenticated resource has admin privileges",
                                "required": false,
                                "type": "string"
                            }
                        ],
                        "responses": {
                            "200": {
                                "description": "json document containing issued information, etc.",
                                "schema": {
                                    "$ref": "#/definitions/issued_responses"
                                }
                            },
                            "401": {
                                "description": "failure in retreiving issued list"
                            }
                        }
                    },
                    "delete": {
                        "consumes": [
                            "application/x-www-form-urlencoded"
                        ],
                        "produces": [
                            "application/json"
                        ],
                        "summary": "Revoke an application/client permission by the authorized owner",
                        "description": "Revoke an application/client permission by the authorized owner",
                        "parameters": [
                            {
                                "name": "client_id",
                                "in": "query",
                                "description": "client_id is the OAuth client id or application id to be revoked",
                                "required": true,
                                "type": "string"
                            },
                            {
                                "name": "username",
                                "in": "query",
                                "description": "username's permission to be revoked if the authenticated resource has admin privileges",
                                "required": false,
                                "type": "string"
                            }
                        ],
                        "responses": {
                            "200": {
                                "description": "OK"
                            }
                        }
                    }
                }
            },
            "definitions": {
                "access_token_response": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "access_token"
                    ],
                    "properties": {
                        "access_token": {
                            "type": "string"
                        }
                    }
                },
                "introspect_response": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "active",
                        "client_id",
                        "client_name",
                        "username",
                        "sub",
                        "exp",
                        "expstr",
                        "iat",
                        "nbf",
                        "nbfstr",
                        "scope"
                    ],
                    "properties": {
                        "active": {
                            "type": "boolean"
                        },
                        "client_id": {
                            "type": "string"
                        },
                        "client_name": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        },
                        "sub": {
                            "type": "string"
                        },
                        "exp": {
                            "type": "string"
                        },
                        "expstr": {
                            "type": "string"
                        },
                        "iat": {
                            "type": "string"
                        },
                        "nbf": {
                            "type": "string"
                        },
                        "nbfstr": {
                            "type": "string"
                        },
                        "scope": {
                            "type": "string"
                        },
                        "miscinfo": {
                            "type": "string"
                        },
                        "consented_on": {
                            "type": "string"
                        },
                        "consented_on_str": {
                            "type": "string"
                        },
                        "grant_type": {
                            "type": "string"
                        }
                    }
                },
                "token_revoke_response": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "string"
                        }
                    }
                },
                "issued_response": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "clientId",
                        "owner",
                        "scope",
                        "issuedAt",
                        "expiredAt",
                        "refreshTokenIssued"
                    ],
                    "properties": {
                        "clientId": {
                            "type": "string"
                        },
                        "clientName": {
                            "type": "string"
                        },
                        "owner": {
                            "type": "string"
                        },
                        "scope": {
                            "type": "string"
                        },
                        "issuedAt": {
                            "type": "string"
                        },
                        "expiredAt": {
                            "type": "string"
                        },
                        "refreshTokenIssued": {
                            "type": "boolean"
                        },
                        "miscInfo": {
                            "type": "string"
                        },
                        "consentedOn": {
                            "type": "string"
                        },
                        "appId": {
                            "type": "string"
                        },
                        "org": {
                            "type": "string"
                        },
                        "orgId": {
                            "type": "string"
                        },
                        "provider": {
                            "type": "string"
                        },
                        "providerId": {
                            "type": "string"
                        },
                        "catalog": {
                            "type": "string"
                        },
                        "catalogId": {
                            "type": "string"
                        }
                    }
                },
                "issued_responses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/issued_response"
                    }
                }
            },
            "securityDefinitions": {
                "clientIdHeader": {
                    "in": "header",
                    "type": "apiKey",
                    "name": "client_id"
                },
                "clientSecretHeader": {
                    "in": "header",
                    "type": "apiKey",
                    "name": "client_secret"
                }
            }
        },
        "pkce": {
            "enabled": true,
            "required": false,
            "allow_plain": false
        },
        "refresh_token": {
            "enabled": true,
            "count": 2048,
            "ttl": 2682000,
            "one_time_use": true
        },
        "openid_connect": {
            "enabled": true,
            "supported_response_types": [
                "code_id_token"
            ]
        },
        "revocation": {
            "enabled": false,
            "type": "native",
            "application_revocation": {
                "enabled": false,
                "apprevoke_path": "/oauth2/revoke"
            },
            "owner_revocation": {
                "enabled": false,
                "owner_revoke_path": "/oauth2/issued"
            },
            "resource_owner_revocation_path": "/oauth2/issued",
            "client_revocation_path": "/oauth2/revoke"
        },
        "token_introspection": {
            "enabled": true,
            "introspection_path": "/oauth2/introspect"
        },
        "native_provider_5000": {}
        ,
        "advanced_scope_security": {
            "enabled": false,
            "mode": [
                "basic-auth"
            ],
            "basic_auth": {
                "request_headername": "x-advanced-scope-basic-authorization-header"
            }
        }
    },
    "scopes": {
        "weather": "Weather Scope",
        "openid": "OpenID Scope"
    }
}
