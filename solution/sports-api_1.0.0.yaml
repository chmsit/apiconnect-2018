swagger: '2.0'
info:
  title: sports-api
  x-ibm-name: sports-api
  version: 1.0.0
schemes:
  - https
basePath: /sports
security:
  - clientID: []
    google-provider:
      - teams
securityDefinitions:
  google-provider:
    type: oauth2
    flow: accessCode
    x-ibm-oauth-provider: google-provider
    authorizationUrl: 'https://accounts.google.com/o/oauth2/v2/auth'
    tokenUrl: 'https://www.googleapis.com/oauth2/v3/userinfo?scope=openid'
    scopes:
      teams: team scope
  clientID:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
x-ibm-configuration:
  phase: realized
  testable: true
  enforced: true
  properties:
    target-url:
      value: 'https://fancave.mybluemix.net'
      description: URL of the proxy policy
      encoded: false
  catalogs: {}
  cors:
    enabled: true
  activity-log:
    enabled: true
    error-content: header
    success-content: activity
  application-authentication:
    certificate: false
  assembly:
    execute:
      - switch:
          version: 2.0.0
          title: switch
          case:
            - condition: (($httpVerb() = 'GET' and $operationPath() = '/scores'))
              execute:
                - invoke:
                    title: invoke
                    version: 2.0.0
                    verb: keep
                    target-url: >-
                      https://fancave.mybluemix.net/api/team/scores?league={league}&date={date}
                    header-control:
                      type: blacklist
                      values: []
                    parameter-control:
                      type: blacklist
                      values: []
            - condition: (($httpVerb() = 'GET' and $operationPath() = '/players'))
              execute:
                - invoke:
                    title: invoke
                    version: 2.0.0
                    verb: keep
                    target-url: >-
                      https://fancave.mybluemix.net/api/player/list?league={league}
                    header-control:
                      type: blacklist
                      values: []
                    parameter-control:
                      type: blacklist
                      values: []
            - condition: (($httpVerb() = 'GET' and $operationPath() = '/news'))
              execute:
                - invoke:
                    title: invoke
                    version: 2.0.0
                    verb: keep
                    target-url: >-
                      https://fancave.mybluemix.net/api/news/feed?league={league}
                    header-control:
                      type: blacklist
                      values: []
                    parameter-control:
                      type: blacklist
                      values: []
            - condition: (($httpVerb() = 'GET' and $operationPath() = '/teams'))
              execute:
                - invoke:
                    title: invoke
                    version: 2.0.0
                    verb: keep
                    target-url: >-
                      https://fancave.mybluemix.net/api/team/list?league={league}
                    header-control:
                      type: blacklist
                      values: []
                    parameter-control:
                      type: blacklist
                      values: []
    catch: []
  gateway: datapower-api-gateway
  type: rest
paths:
  /news:
    get:
      responses:
        '200':
          description: response code
          schema:
            type: string
      consumes: []
      produces: []
      parameters: []
    parameters:
      - name: league
        in: query
        required: false
        type: string
  /scores:
    get:
      responses:
        '200':
          description: response code
          schema:
            type: string
      consumes: []
      produces: []
      parameters: []
    parameters:
      - name: league
        in: query
        required: false
        type: string
      - name: date
        in: query
        required: false
        type: string
  /players:
    get:
      responses:
        '200':
          description: response code
          schema:
            type: string
      consumes: []
      produces: []
      parameters: []
    parameters:
      - name: league
        in: query
        required: false
        type: string
  /teams:
    get:
      responses:
        '200':
          description: response code
          schema:
            type: string
      consumes: []
      produces: []
      parameters: []
    parameters:
      - name: league
        in: query
        required: false
        type: string
